* benchmarking
  this repository is for benchmarking the force fields generated by my
  [[https://github.com/ntBre/valence-fitting][valence-fitting]] repo with Matt's [[https://github.com/mattwthompson/ib][ibstore]] package

* Usage
** Environment
   Initialize the conda environment with

   #+begin_src shell
     mamba env create -f env.yaml
   #+end_src

   Then ~cd~ to wherever you cloned ~ibstore~ and run

   #+begin_src shell
     pip install -e .
   #+end_src

   to add the ~ibstore~ package to your environment.
** main.py
   The central functionality can be accessed by running ~main.py~ directly:

   #+begin_src shell
     python main.py
   #+end_src

   This is the same as passing the following values for each of the flags:

   #+begin_src shell
     python main.py \
	    --forcefield force-field.offxml \
	    --dataset datasets/industry.json \
	    --db-file tmp.sqlite \
	    --out-dir .
   #+end_src

   In both cases, the forcefield to benchmark is taken from ~force-field.offxml~
   in the current directory, the dataset is taken from the charge-filtered
   version of Lily's version of the ~OpenFF Industry Benchmark Season 1 v1.0~ in
   the datasets directory, the molecule database is stored in a file named
   ~tmp.sqlite~, and the output CSV and PNG files are written to the current
   directory.
** Makefile
   The Makefile is pretty messy and doesn't do much right now, but you can run
   ~main.py~ on the industry dataset and then stick the resulting images together
   with ImageMagick using:

   #+begin_src shell
     make industry-output/out.png
   #+end_src

   This assumes you've created the ~industry-output~ directory. These recipes
   really need to be modularized.
** Slurm
   Similarly, ~scripts/industry.sh~ simply calls the ~make~ command above, after
   activating the conda environment from ~env.yaml~. So if everything is set up,
   you should be able to run

   #+begin_src shell
     sbatch scripts/industry.sh
   #+end_src

   and come back around 24 hours later to a summary image like the one shown in
   the Results section below.

* Results
** OpenFF Full Optimization Benchmark 1
   #+NAME: output-results
   #+ATTR_HTML: :width 600px
   [[file:full-opt-output/out.png]]

* Files
  | Dir             | File               | Purpose                                                   |
  |-----------------+--------------------+-----------------------------------------------------------|
  | .               | main.py            | Benchmarking script using ibstore                         |
  |                 | env.yaml           | conda environment to run the script                       |
  |                 | force-field.offxml | FB-optimized, really-filtered torsion-multiplicity FF     |
  |                 | sage.offxml        | FB-optimized sage 2.1.0 with torsion-multiplicity data    |
  |                 | refilter.py        | script to refilter the industry dataset for charge issues |
  |-----------------+--------------------+-----------------------------------------------------------|
  | sage            | env.yaml           | conda environment [[https://github.com/openforcefield/sage-2.1.0/blob/main/conda-envs/fb_193.yaml][from sage 2.1.0]]                         |
  |                 | 01-setup.py        | Setup script from [[https://github.com/openforcefield/openff-sage/tree/main/inputs-and-results/benchmarks/qc-opt-geo][openff-sage]]                             |
  |                 | 02-b-minimize.py   | Minimize all the structures, also from openff-sage        |
  |-----------------+--------------------+-----------------------------------------------------------|
  | scripts         | fetch_industry.sh  | try to download the industry dataset - not working        |
  |                 | industry.sh        | run the benchmarks on the industry dataset                |
  |                 | refilter.sh        | refilter the industry dataset                             |
  |                 | submit.sh          | run the benchmarks on the full-opt dataset                |
  |-----------------+--------------------+-----------------------------------------------------------|
  | full-opt-output | *                  | Benchmark output on full-opt dataset                      |
